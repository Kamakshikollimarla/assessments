# -*- coding: utf-8 -*-
"""LVADUSR94_clustereing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xY1YCoY8F-JksJEOGtq3zzSFbGd7weYP
"""

import pandas as pd
import numpy as np

data = pd.read_csv("/content/seeds.csv")
data.isnull().sum()
data.info()

data.head()

data.isnull().sum()
data.dropna(inplace=True)
data.isnull().sum()

data.isnull().sum()

import seaborn as sns
sns.heatmap(data.corr(),annot=True)

import seaborn as sns
sns.pairplot(data)

sns.boxplot(data)

from scipy.stats import zscore
zscores = zscore(data)
abs = np.abs(zscores)
f = (abs > 5).all(axis = 1)
cleaned = data[~f]
sns.boxplot(cleaned)

from sklearn.preprocessing import StandardScaler
s = StandardScaler()

X_scaled = s.fit_transform(data)

from sklearn.cluster import KMeans
css = []
for i in range(1,30):
  k = KMeans(n_clusters = i , random_state = 1)
  cf = k.fit(data)
  css.append(cf.inertia_)

import matplotlib.pyplot as plt
plt.plot(range(1,30),css)

k = 3
clf = KMeans(n_clusters=k)
model = clf.fit_predict(data)

data['cluster'] = clf.labels_
data.head()
centroids = clf.cluster_centers_

# data.head(1)
centroids[:,1]

sns.scatterplot(x=data['Length of kernel'], y=data['Width of kernel'], hue=data['cluster'], palette='viridis', s=100, alpha=0.6)
plt.title('Cluster Visualization')
plt.legend(title='Clusters')
plt.show()